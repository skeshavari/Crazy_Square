<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>nl.sogyo.VrijMiFunProject</groupId>
    <artifactId>VrijMiFunProject</artifactId>
    <version>1.0-SNAPSHOT</version>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <!-- Use the latest released version:
                https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
                <version>1.4</version>
            </plugin>
            <plugin>
                <execution>
                    <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
                    <id>install node and npm</id>
                    <goals>
                        <goal>install-node-and-npm</goal>
                    </goals>
                    <!-- optional: default phase is "generate-resources" -->
                    <phase>generate-resources</phase>
                </execution>
                <configuration>
                    <nodeVersion>v4.6.0</nodeVersion>

                    <!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
                    <npmVersion>2.15.9</npmVersion>

                    <!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
                    <downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot>
                </configuration>
            </plugin>
        </plugins>
        <execution>
            <id>npm install</id>
            <goals>
                <goal>npm</goal>
            </goals>

            <!-- optional: default phase is "generate-resources" -->
            <phase>generate-resources</phase>

            <configuration>
                <!-- optional: The default argument is actually
                "install", so unless you need to run some other npm command,
                you can remove this whole <configuration> section.
                -->
                <arguments>install</arguments>
            </configuration>
        </execution>
        <execution>
            <id>javascript tests</id>
            <goals>
                <goal>karma</goal>
            </goals>

            <!-- optional: the default plase is "test". Some developers
            choose to run karma in the "integration-test" phase. -->
            <phase>test</phase>

            <configuration>
                <!-- optional: the default is "karma.conf.js" in your working directory -->
                <karmaConfPath>karma.conf.ci.js</karmaConfPath>
            </configuration>
        </execution>
    </build>
</project>